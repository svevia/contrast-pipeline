# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: maven:3-openjdk-15-slim
    env:
      MAVEN_OPTS: "-javaagent:/tmp/contrast.jar -Dcontrast.api.token=${{ secrets.TOKEN }} -Dcontrast.application.name=Webgoat -Dcontrast.server.environment=DEVELOPMENT  -Dcontrast.server.name=GitHub -Dcontrast.application.version=$GITHUB_SHA"
      CONTRAST__APPLICATION__SESSION_METADATA: "committer=GitHub,branchName=$GITHUB_WORKFLOW_REF,version=$GITHUB_SHA,repository=Webgoat"


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.2.2
        with:
          # Repository name with owner. For example, actions/checkout
          repository: 'WebGoat/WebGoat'
          # The branch, tag or SHA to checkout. When checking out the repository that triggered a workflow, this defaults to the reference or SHA for that event.  Otherwise, uses the default branch.
          ref: 'v8.2.2'


      # Runs a set of commands using the runners shell
      - name: Install agent
        run: |
          curl 'https://download.java.contrastsecurity.com/latest' -Lo /tmp/contrast.jar
          java -jar /tmp/contrast.jar
          ls  -l 

      # Runs a single command using the runners shell
      - name: Run tests
        run: mvn -Dtest="org/owasp/webgoat/*"  -Dmaven.test.failure.ignore=true -DfailIfNoTests=false clean install


      - name: Contrast Verify
        # You may pin to the exact commit or the version.
        # uses: Contrast-Security-OSS/integration-verify-github-action@f89c19e990aa80409def38190ff0d694c8422430
        uses: Contrast-Security-OSS/integration-verify-github-action@v0.6.7
        with:
          # Contrast User/Service Account API Key
          apiKey: ${{ secrets.API_KEY }}
          # Contrast Organization ID
          orgId: ${{ secrets.ORG_ID }}
          # URL of your Contrast Teamserver Instance (should begin with https:// or http://)
          apiUrl: ${{ secrets.URL }}
          # Contrast User/Service Account service key. Required if authorization not passed.
          #serviceKey: ${{ secrets.SERVICE_KEY }}# optional
          # Contrast User/Service Account Authorization Header. Required if username and service key not passed.
          authHeader: ${{ secrets.AUTH }}
          # Contrast User/Service Account username. Required if authorization not passed.
          #userName: # optional
          # ID of the application to verify against. Required if app_name not passed.
          #appId: # optional
          # Name of the application to verify against. Required if app_id not passed.
          appName: Webgoat
          # Build number / application version to check vulnerabilities against.
          #buildNumber: # optional
          # Number of vulnerabilities that are needed to fail the build (not used if there is a defined job outcome policy)
          failThreshold: 0
          # Filter vulnerabilities first found after this timestamp (formatted in milliseconds since the epoch)
          #jobStartTime: # optional, default is 0
          # Comma separated list of vulnerability severities to consider (not used if there is a defined job outcome policy)
          severities: CRITICAL
          
